<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <!-- To customize the asp.net core module uncomment and edit the following section. 
  For more info see https://go.microsoft.com/fwlink/?linkid=838655 -->
  <!--
  <system.webServer>
    <handlers>
      <remove name="aspNetCore"/>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModule" resourceType="Unspecified"/>
    </handlers>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" />
  </system.webServer>
  -->

  <!-- 
    FileUltimate does not depend on any Web.config settings to work (it's config-free for easy deployment).
    However if you want to support the lowest level upload method Html4 which is the only possible method 
    for old browsers without Html5 or Flash or Silverlight support, then you will need to increase the 
    request limits so that you can upload files larger than 4MB and 28.6 MB on these browsers.  
    Html4 upload method requires the limits to be set to the maximum possible value as it sends the whole
    file in a single request (multipart/form-data). Other upload methods use chunking so there is no upper limit 
    for them and they do not require these settings.
    For more information see, https://docs.gleamtech.com/fileultimate/html/optional-upload-configuration.htm
  -->
  <!-- This setting increases the request max size for whole application -->
  <location path="." inheritInChildApplications="false">
    <system.webServer>
      <security>
        <requestFiltering>
          <!-- 
            maxAllowedContentLength is in bytes, default value is 30000000 (28.6 MB), maximum value is 4294967295 (4 GB).
            This setting effects FileUploader, as it is an IIS setting, FileUploader cannot automatically override it.
          -->
          <requestLimits maxAllowedContentLength="4294967295"/>
        </requestFiltering>
      </security>
    </system.webServer>
  </location>

</configuration>